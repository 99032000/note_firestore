{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts"],"names":[],"mappings":"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","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>Todo list</ion-title>\\n      <ion-button slot=\\\"end\\\" (click) = \\\"signOut()\\\">sign out</ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-input [(ngModel)]=\\\"inputItem\\\" placeholder=\\\"add an item\\\" name = \\\"inputItem\\\"></ion-input>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"add(inputItem)\\\" [disabled]=\\\"!inputItem\\\">Add</ion-button>\\n    </ion-buttons>\\n    \\n  </ion-toolbar>\\n  <ion-list>\\n    <ion-item *ngFor = \\\"let todo of items  | async\\\" [class.done]= \\\"todo.status\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-checkbox [checked]= \\\"todo.status\\\" (ionChange)=\\\"update(todo)\\\"></ion-checkbox>\\n      </ion-buttons>\\n      \\n      <ion-label>{{todo.name}}</ion-label>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"delete(todo)\\\" *ngIf=\\\"todo.status\\\">\\n          <ion-icon name=\\\"close\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      \\n      \\n    </ion-item>\\n    \\n  </ion-list>\\n  \\n</ion-content>\\n\"","module.exports = \"ion-item.done {\\n  text-decoration: line-through; }\\n\\nion-input {\\n  --padding-start: 2em;\\n  --background: white;\\n  --color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGVucGVuZ3l1L0Rlc2t0b3AvY3Jvc3MtcGxhdGZvcm0tZmlyc3RBcHAtbWFzdGVyL25vdGUgY29weS9zcmMvYXBwL2xpc3QvbGlzdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBNkIsRUFBQTs7QUFFakM7RUFDSSxvQkFBZ0I7RUFDaEIsbUJBQWE7RUFDYixjQUFRLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9saXN0L2xpc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWl0ZW0uZG9uZXtcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cbmlvbi1pbnB1dHtcbiAgICAtLXBhZGRpbmctc3RhcnQ6IDJlbTtcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xuICAgIC0tY29sb3I6IGJsYWNrO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { Todo, Item } from '../Todo.model';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Platform } from '@ionic/angular';\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n  //todos: Todo[];\n  inputItem: string;\n  itemsDoc: AngularFirestoreDocument<Item>;\n  items: Observable<Todo[]>;\n  email: string;\n  constructor(public afs: AngularFirestore,\n    public afAuth: AngularFireAuth,\n    public authService: AuthService,\n    public router: Router,\n    private plt: Platform,\n    private localNotification: LocalNotifications) {\n    this.afAuth.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.selectItems(user.email);\n        this.email = user.email;\n        this.localNotification.schedule({\n          id: 1,\n          title: 'Welcome',\n          text: user.email,\n          // data: { mydata: 'my data'},\n          foreground: true\n\n        });\n      }\n    });\n    // this.itemsDoc.collection<Todo>('todo').ref.where('status','==',false\n    // this.localNotification.schedule({\n    //   id:1,\n    //   title: 'Welcome',\n    //   text: this.email,\n    //   // data: { mydata: 'my data'},\n    //   foreground : true\n\n    // });\n  }\n\n  ngOnInit() {\n\n  }\n  selectItems(email: string) {\n    this.itemsDoc = this.afs.doc<Item>('users/' + email);\n    this.items = this.itemsDoc.collection<Todo>('todo').valueChanges();\n    // // turn on logging if you want to see how the requests are sent\n    // this.groceryItemsDoc.collection<GroceryItem>('GroceryItems').auditTrail().subscribe(console.log);\n  }\n  add(name: string) {\n    const id = this.afs.createId();\n    const todo = { name: name, id: id, status: false };\n    this.itemsDoc.collection<Todo>('todo').doc(id).set(todo).then(() => {\n      this.inputItem = '';\n    })\n      .catch((error) => {\n        alert(error);\n      });\n  };\n\n  delete(item) {\n    this.itemsDoc.collection<Todo>('todo').doc(item.id).delete();\n  }\n\n  update(item) {\n    if (item.status) { item.status = false; } else { item.status = true; }\n    this.itemsDoc.collection<Todo>('todo').doc(item.id).set(item);\n  }\n\n  signOut() {\n    this.authService.signOut()\n      .then(() => { this.router.navigate(['/signup']); })\n      .catch();\n  }\n\n}\n"],"sourceRoot":""}