{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts","webpack:///./src/app/todo.service.ts"],"names":[],"mappings":"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","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>Todo list</ion-title>\\n      <ion-button slot=\\\"end\\\" (click) = \\\"signOut()\\\">sign out</ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-input [(ngModel)]=\\\"input\\\" placeholder=\\\"add an item\\\"></ion-input>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"add(input)\\\" [disabled]=\\\"!input\\\">Add</ion-button>\\n    </ion-buttons>\\n    \\n  </ion-toolbar>\\n  <ion-list>\\n    <ion-item *ngFor = \\\"let todo of todos\\\" [class.done]= \\\"todo.status\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-checkbox [checked]= \\\"todo.status\\\" (ionChange)=\\\"update(todo)\\\"></ion-checkbox>\\n      </ion-buttons>\\n      \\n      <ion-label>{{todo.name}}</ion-label>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"delete(todo)\\\" *ngIf=\\\"todo.status\\\">\\n          <ion-icon name=\\\"close\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      \\n      \\n    </ion-item>\\n    \\n  </ion-list>\\n  \\n</ion-content>\\n\"","module.exports = \"ion-item.done {\\n  text-decoration: line-through; }\\n\\nion-input {\\n  --padding-start: 2em;\\n  --background: white;\\n  --color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGVucGVuZ3l1L0Rlc2t0b3AvY3Jvc3MtcGxhdGZvcm0tZmlyc3RBcHAtbWFzdGVyL25vdGUvc3JjL2FwcC9saXN0L2xpc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksb0JBQWdCO0VBQ2hCLG1CQUFhO0VBQ2IsY0FBUSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGlzdC9saXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pdGVtLmRvbmV7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG5pb24taW5wdXR7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAyZW07XG4gICAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAtLWNvbG9yOiBibGFjaztcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Todo, TodoService } from '../todo.service';\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n  todos: Todo[];\n  constructor(private todoService: TodoService) {\n\n  }\n\n  ngOnInit() {\n    this.todoService.getTodos().subscribe(res => {\n      this.todos = res;\n    });\n  }\n\n  remove(item) {\n    this.todoService.removeTodo(item.id);\n  }\n  add(name: string) {\n    const todo = { name: name, status: false };\n    this.todoService.addTodo(todo);\n  }\n  update(item) {\n    if (item.status) { item.status = false; } else { item.status = true; }\n    this.todoService.updateTodo(item,item.id);\n  }\n  delete(item){\n    this.todoService.removeTodo(item.id);\n  }\n  signOut(){\n    this.todoService.signOut();\n  }\n  // add back when alpha.4 is out\n  // navigate(item) {\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from './app.component';\nimport { map } from 'rxjs/operators';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AuthService} from './auth.service';\nimport { Router} from '@angular/router';\nimport { SignoutPage } from './signout/signout.page';\nexport interface Todo {\n  name: string;\n  status: boolean;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private todosCollection: AngularFirestoreCollection<Todo>;\n  private todos: Observable<Todo[]>;\n  private email: string;\n  constructor(db: AngularFirestore, appComponent: AppComponent,\n     afth: AngularFireAuth,private autherService: AuthService, private router: Router) {\n    //this.email = appComponent.email;\n    //console.log(this.email);\n    try{\n    this.todosCollection = db.collection<Todo>(afth.auth.currentUser.email);\n    this.todos = this.todosCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );}catch(ex){\n    this.signOut();\n    }\n  }\n  signOut() {\n    this.autherService.signOut()\n    .then(() => {this.router.navigate(['/signup']); })\n    .catch();\n  }\n  getTodos() {\n    return this.todos;\n  }\n  getTodo(id) {\n    return this.todosCollection.doc<Todo>(id).valueChanges();\n  }\n  removeTodo(id) {\n    return this.todosCollection.doc(id).delete();\n  }\n  addTodo(todo: Todo) {\n    return this.todosCollection.add(todo);\n  }\n  updateTodo(todo: Todo, id: string) {\n    return this.todosCollection.doc(id).update(todo);\n  }\n  \n}\n"],"sourceRoot":""}